{"ast":null,"code":"var _jsxFileName = \"/home/umesh/Desktop/web development/Keep/keeper-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport AddNote from './components/addNote';\nimport Note from './components/note';\n\nfunction App() {\n  useEffect(() => {\n    fetch('/api/items').then(res => res.json()).then(data => setNotes(data));\n    return () => {};\n  }, []);\n  const [notes, setNotes] = useState([]);\n  const [searched, setSearched] = useState([]);\n  const [edit, setEdit] = useState({\n    title: \"\",\n    details: \"\",\n    editNote: false\n  });\n\n  function handleSerach(note) {\n    setSearched(() => {\n      return notes.filter(noteItem => {\n        if (noteItem.title.includes(note)) {\n          return noteItem;\n        }\n      });\n    });\n  }\n\n  let Array = searched.length > 0 ? searched : notes;\n\n  function handleAdd(note) {\n    const postreq = {\n      method: \"post\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(note)\n    };\n    fetch(\"/api/items\", postreq);\n    fetch('/api/items').then(res => res.json()).then(data => setNotes(data));\n  }\n\n  function Delete(id) {\n    fetch(\"/api/items\" + id, {\n      method: 'delete'\n    });\n  }\n\n  function Edit(title, detail) {\n    setEdit({\n      \"title\": title,\n      \"details\": detail,\n      editNote: true\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onSearch: handleSerach,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddNote, {\n    onAdd: handleAdd,\n    edited: edit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), Array.map((noteItem, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      id: noteItem._id,\n      title: noteItem.title,\n      details: noteItem.description,\n      onDelete: Delete,\n      onEdit: Edit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nexport default App; // import React, { useState } from 'react';\n// import './App.css';\n// import Header from './components/header';\n// import AddNote from './components/addNote'\n// import Note from './components/note'\n// import {Provider} from 'react-redux'\n// import store from '../src/store'\n// import {connect} from 'react-redux'\n// import {getItems} from './actions/notesAction'\n// import PropTypes from 'prop-types'\n// function App() {\n//   const [notes,setNotes]=useState([{title:\"1\",detail:'1'},{title:\"2\",detail:'2'},{title:\"3\",detail:'3'}]);\n//   const [searched,setSearched]=useState([])\n//   const [edit,setEdit]=useState({\n//     title:\"\",\n//     details:\"\",\n//     editNote:false\n//   })\n//   function handleSerach(note){\n//     setSearched(()=>{\n//       return notes.filter((noteItem)=>{\n//         if(noteItem.title.includes(note))\n//         {\n//           return noteItem;\n//         }\n//     }) \n//   });    \n//   }\n//   let Array=searched.length>0?searched:notes;\n//   function handleAdd(note){\n//     setNotes(prev=>{\n//       return [...prev,note]\n//     })\n//   }\n//   function Delete(title){\n//     setNotes(prev=>{\n//       return prev.filter((Array,index)=>{\n//         return Array.title!=title\n//       })\n//     })\n//     setSearched(prev=>{\n//       return prev.filter((Array,index)=>{\n//         return Array.title!=title\n//       })\n//     })\n//   }\n//   function Edit(title,detail){\n//     setEdit({\n//       title:title,\n//       details:detail,\n//       editNote:true\n//     })\n//   }\n//   return (\n//     <Provider store={store}>\n//     <div className=\"App\">\n//       <Header onSearch={handleSerach}/>\n//       <AddNote onAdd={handleAdd} edited={edit}/>\n//       {\n//       Array.map((noteItem,index)=>{\n//         return(<Note \n//         key={index}\n//         id={index}\n//         title={noteItem.title}\n//         details={noteItem.details}\n//         onDelete={Delete}\n//         onEdit={Edit}\n//         />)\n//       })\n//       } \n//     </div>\n//     </Provider>\n//   );\n// }\n// const mapStateToProps=(state)=>({\n//   item:state.item\n// })\n// export default connect(mapStateToProps,{getItems})(App);","map":{"version":3,"sources":["/home/umesh/Desktop/web development/Keep/keeper-app/src/App.js"],"names":["React","useState","useEffect","Header","AddNote","Note","App","fetch","then","res","json","data","setNotes","notes","searched","setSearched","edit","setEdit","title","details","editNote","handleSerach","note","filter","noteItem","includes","Array","length","handleAdd","postreq","method","headers","body","JSON","stringify","Delete","id","Edit","detail","map","index","_id","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport AddNote from './components/addNote'\nimport Note from './components/note'\n\n\nfunction App() {\n\n  useEffect(() => {\n    fetch('/api/items').then(res=>res.json()).then(data=>setNotes(data))\n    return () => {\n    }\n  }, [])\n\n  const [notes,setNotes]=useState([]);\n  const [searched,setSearched]=useState([])\n  const [edit,setEdit]=useState({\n    title:\"\",\n    details:\"\",\n    editNote:false\n  })\n\n  function handleSerach(note){\n    setSearched(()=>{\n      return notes.filter((noteItem)=>{\n        if(noteItem.title.includes(note))\n        {\n          return noteItem;\n        }\n    }) \n  });    \n  }\n\n  let Array=searched.length>0?searched:notes;\n\n\n\n  function handleAdd(note){\n    const postreq={\n      method:\"post\",\n      headers:{\"content-type\": \"application/json\"},\n      body:JSON.stringify(note)\n    }\n    fetch(\"/api/items\",postreq)\n    fetch('/api/items').then(res=>res.json()).then(data=>setNotes(data))\n\n  }\n\n  function Delete(id){\n    \n    fetch(\"/api/items\"+id,{method:'delete'})\n  }\n\n  function Edit(title,detail){\n    setEdit({\n      \"title\":title,\n      \"details\":detail,\n      editNote:true\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Header onSearch={handleSerach}/>\n      <AddNote onAdd={handleAdd} edited={edit}/>\n\n      {\n        \n      Array.map((noteItem,index)=>{\n        return(<Note \n        key={index}\n        id={noteItem._id}\n        title={noteItem.title}\n        details={noteItem.description}\n        onDelete={Delete}\n        onEdit={Edit}\n        />)\n      })\n    \n      } \n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import './App.css';\n// import Header from './components/header';\n// import AddNote from './components/addNote'\n// import Note from './components/note'\n// import {Provider} from 'react-redux'\n// import store from '../src/store'\n// import {connect} from 'react-redux'\n// import {getItems} from './actions/notesAction'\n// import PropTypes from 'prop-types'\n\n// function App() {\n\n//   const [notes,setNotes]=useState([{title:\"1\",detail:'1'},{title:\"2\",detail:'2'},{title:\"3\",detail:'3'}]);\n//   const [searched,setSearched]=useState([])\n//   const [edit,setEdit]=useState({\n//     title:\"\",\n//     details:\"\",\n//     editNote:false\n//   })\n\n//   function handleSerach(note){\n//     setSearched(()=>{\n//       return notes.filter((noteItem)=>{\n//         if(noteItem.title.includes(note))\n//         {\n//           return noteItem;\n//         }\n//     }) \n//   });    \n//   }\n\n//   let Array=searched.length>0?searched:notes;\n\n\n\n//   function handleAdd(note){\n//     setNotes(prev=>{\n//       return [...prev,note]\n//     })\n//   }\n\n//   function Delete(title){\n//     setNotes(prev=>{\n//       return prev.filter((Array,index)=>{\n//         return Array.title!=title\n//       })\n//     })\n//     setSearched(prev=>{\n//       return prev.filter((Array,index)=>{\n//         return Array.title!=title\n//       })\n//     })\n//   }\n  \n//   function Edit(title,detail){\n//     setEdit({\n//       title:title,\n//       details:detail,\n//       editNote:true\n//     })\n//   }\n\n\n//   return (\n//     <Provider store={store}>\n//     <div className=\"App\">\n//       <Header onSearch={handleSerach}/>\n//       <AddNote onAdd={handleAdd} edited={edit}/>\n\n//       {\n        \n//       Array.map((noteItem,index)=>{\n//         return(<Note \n//         key={index}\n//         id={index}\n//         title={noteItem.title}\n//         details={noteItem.details}\n//         onDelete={Delete}\n//         onEdit={Edit}\n//         />)\n//       })\n    \n//       } \n      \n//     </div>\n//     </Provider>\n//   );\n// }\n\n\n\n// const mapStateToProps=(state)=>({\n//   item:state.item\n// })\n\n// export default connect(mapStateToProps,{getItems})(App);\n"]},"metadata":{},"sourceType":"module"}